// Задание 1


// Напишите функцию, которая принимает массив булевых значений, а возвращает число, которое представляет собой количесво значений true в массиве

// countTrue([true, false, false, true, false]); // -> 2
// countTrue([false, false, false, false]); // -> 0
// countTrue([]); // -> 0



// Задание 2


// Вам необходимо посчитать количество вхождений каждого элемента в массиве. Результатом работы написанного вами метода должен быть объект, где ключами являются елементы массива а их значениями - количесво раз, которое каждый конкретный элемент встречается в массиве. В массиве гарантировано находятся исключительно строки.

// getOccurrencesCount(["a", "v", "a", "b", "b"]);
// // {
// //   a: 2,
// //   v: 1,
// //   b: 2,
// // }

// getOccurrencesCount([
//   "apples",
//   "oranges",
//   "pears",
//   "pears",
//   "apples",
//   "oranges",
//   "oranges",
//   "pears",
// ]);
// // {
// //   apples: 2,
// //   oranges: 3,
// //   pears: 3,
// // }





// Задание 3


// Вам предоставляется массив (который будет иметь длину не менее 3, но может быть очень большим), содержащий целые числа. Массив либо полностью состоит из нечетных целых чисел, либо полностью состоит из четных целых чисел, за исключением одного целого числа N. Напишите метод, который принимает массив в качестве аргумента и возвращает это «лишнее» N.

// findExcess([0, 1, 2]); // -> 1
// findExcess([1, 2, 3]); // -> 2
// findExcess([2, 6, 8, 10, 3]); // -> 3
// findExcess([0, 0, 3, 0, 0]); // -> 3
// findExcess([1, 1, 0, 1, 1]); // -> 0